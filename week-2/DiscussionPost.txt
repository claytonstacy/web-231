1. A function in javascript is a special type of object that is a parameterized and able to be invoked multiple times to perform tasks. Each instance of a function can have different arguments passed as parameters.  Functions can also be properties of objects, and when this happens they are known as methods.  A function will always return a value, either specified within the function or 'undefined' if no return value is specified or the function itself is undefined.
2. Functions are defined in two ways, through a function declaration expression or through a function declaration statement.  Function declaration expressions require a function to be named and are hoisted, meaning they can be invoked before they are defined in an application.  Function declaration statements aren't hoisted, and names are optional.
3. Defining a function means to name it (if necessary), name the parameters inside of parantheses, and define the body of function inside a set of curly braces. Parameters will act as locally scoped variables in the function.  The body can have zero or many statements inside of them.  As mentioned above the function will always return a value, whether stated explicitly or not.
4. Parentheses are used to name the parameters that the function needs in order to run the function also has access to globally scoped variables).  When the function is invoked values are passed to the function.  The parameters take these values and make them available to the function in scope.
5. Any number of javascript statements can go inside of the curly braces of a function.  These statements are executed until the function reaches a return value.  If no return value is set explicitly by the statements, the function executes all statements then returns undefined.  The technical term for the space between the curly braces is the function body.